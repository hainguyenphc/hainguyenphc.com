<?php

/**
 * @file
 * Functions to support theming in de_theme.
 */

use Drupal\node\Entity\Node;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
// function de_theme_preprocess_html(&$variables) {
//   // Add information about the number of sidebars.
//   if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_secondary'])) {
//     $variables['attributes']['class'][] = 'layout-two-sidebars-display';
//   }
//   elseif (!empty($variables['page']['sidebar_first'])) {
//     $variables['attributes']['class'][] = 'layout-one-sidebar-display';
//     $variables['attributes']['class'][] = 'layout-sidebar-first-display';
//   }
//   elseif (!empty($variables['page']['sidebar_second'])) {
//     $variables['attributes']['class'][] = 'layout-one-sidebar-display';
//     $variables['attributes']['class'][] = 'layout-sidebar-second-display';
//   }
//   else {
//     $variables['attributes']['class'][] = 'layout-no-sidebars-display';
//   }
// }


/**
 * Implement hook_preprocess_html()
 */

 function de_theme_preprocess_html(array &$variables){
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'two_sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'one_sidebar sidebar_first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'one_sidebar sidebar_second';
  }
  else {
    $variables['attributes']['class'][] = 'no_sidebars';
  }
 }

/**
  * Implement hook_preprocess_page()
  */
function de_theme_preprocess_page(array &$variables) {
   // fix Main page content block order issue
  if (isset($variables['page']['content']['system_main'])) {
    $main_content = $variables['page']['content']['system_main'];
    unset($variables['page']['content']['system_main']);
    $pos = array_search('de_theme_content', array_keys($variables['page']['content']));
    $content_ordered = array_slice($variables['page']['content'], 0, $pos, true) +
              ['system_main' => $main_content] +
              array_slice($variables['page']['content'], $pos, NULL, true);
    $variables['page']['content'] = $content_ordered;
  }
}

/**
  * Implement hook_preprocess_block()
  */
function de_theme_preprocess_block(array &$variables) {
  if ($variables['plugin_id'] === 'page_title_block') {
    /** @var Drupal\node\Entity\Node $node */
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof Node) {
      /** @var string $bundle */
      $bundle = $node->bundle();
      $id = $variables['attributes']['id'];
      $variables['attributes']['id'] = "{$id}--node-{$bundle}";
      if ($bundle === 'project' || $bundle === 'page') {
        // Pass the whole node into template.
        // Use Twig file_url function to get the URL of the banner image.
        // @see themes/custom/digitalechidna/de_theme/templates/block/block--page-title-block.html.twig
        $variables['node'] = $node;
      }
    }
  }

  // Content on left sidebar for
  // - Project
  // - Project Build Step
  if ($variables['plugin_id'] === 'system_main_block') {
    /** @var \Drupal\node\Entity\Node $node  */
    $node = \Drupal::request()->attributes->get('node');
    // Target `project` bundle.
    if ($node && $node instanceof Node && $node->hasField('field_project_categories')) {
      /** @var \Drupal\Core\Field\EntityReferenceFieldItemList */
      $categories = $node->field_project_categories;
      /** @var array $render */
      $render = $categories->view('full');
      $variables['content__left_sidebar'] = $render;
    }
    // Target the `project_build_step` bundle.
    if ($node && $node instanceof Node && $node->hasField('field_project')) {
      $go_to_project = $node->field_project;
      /** @var array $render */
      $render = $go_to_project->view('full');
      $variables['content__left_sidebar'] = $render;
    }
  }
}
