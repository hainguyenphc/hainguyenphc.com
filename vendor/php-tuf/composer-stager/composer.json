{
    "name": "php-tuf/composer-stager",
    "description": "Stages Composer commands so they can be safely run on a production codebase.",
    "license": "MIT",
    "type": "library",
    "readme": "docs/README.md",
    "authors": [
        {
            "name": "Travis Carden",
            "email": "travis.carden@gmail.com",
            "role": "Developer"
        }
    ],
    "homepage": "https://github.com/php-tuf/composer-stager",
    "support": {
        "issues": "https://github.com/php-tuf/composer-stager/issues",
        "source": "https://github.com/php-tuf/composer-stager"
    },
    "require": {
        "php": ">=8.1.0",
        "ext-json": "*",
        "symfony/filesystem": "^6.2",
        "symfony/process": "^6.2",
        "symfony/translation-contracts": "^3.2"
    },
    "require-dev": {
        "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
        "ergebnis/composer-normalize": "^2.33",
        "jangregor/phpstan-prophecy": "^1.0",
        "php-parallel-lint/php-parallel-lint": "^1.3",
        "phpbench/phpbench": "^1.2",
        "phpmd/phpmd": "^2.13",
        "phpro/grumphp-shim": "^2.0",
        "phpspec/prophecy": "^1.17",
        "phpspec/prophecy-phpunit": "^2.0",
        "phpstan/extension-installer": "^1.3",
        "phpstan/phpstan": "^1.10",
        "phpstan/phpstan-deprecation-rules": "^1.1",
        "phpstan/phpstan-strict-rules": "^1.5",
        "phpunit/phpunit": "^9.6",
        "psalm/phar": "^5.13",
        "rector/rector": "^0.17.5 || ^0.18.0",
        "slevomat/coding-standard": "^8.13",
        "squizlabs/php_codesniffer": "^3.7",
        "symfony/config": "^6.3",
        "symfony/dependency-injection": "^6.3",
        "symfony/yaml": "^6.3",
        "thecodingmachine/phpstan-strict-rules": "^1.0"
    },
    "suggest": {
        "symfony/translation": "For internationalization tools"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "PhpTuf\\ComposerStager\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PhpTuf\\ComposerStager\\": "tools/PHPCS/",
            "PhpTuf\\ComposerStager\\PHPBench\\": "tools/PHPBench/",
            "PhpTuf\\ComposerStager\\PHPStan\\": "tools/PHPStan/",
            "PhpTuf\\ComposerStager\\Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "ergebnis/composer-normalize": true,
            "phpro/grumphp-shim": false,
            "phpstan/extension-installer": true
        },
        "optimize-autoloader": true,
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-develop": "2.x-dev"
        },
        "grumphp": {
            "disable-plugin": true
        }
    },
    "scripts": {
        "all": [
            "phpstan clear-result-cache",
            "grumphp run"
        ],
        "bench": "@phpbench",
        "c": [
            "@composer dump-autoload",
            "phpstan clear-result-cache",
            "rm -r var/*/* &> /dev/null || true",
            "git checkout -- var"
        ],
        "cbf": "phpcbf",
        "coverage": "open $(pwd)/var/phpunit/html-coverage/index.html || echo 'Run the \"test\" command to generate the coverage report.'",
        "cs": "@phpcs",
        "dox": "phpunit --testdox --color=always --exclude-group=windows_only",
        "fast": "phpunit --exclude-group=slow,windows_only",
        "fix": "@phpcbf",
        "functional": "phpunit --testsuite=functional --exclude-group=windows_only",
        "lint": "parallel-lint --no-progress src tests",
        "md": "@phpmd",
        "phpbench": "phpbench run --report=all --output=console --output=html",
        "phpcbf": "phpcbf",
        "phpcs": "phpcs -s",
        "phpmd": "phpmd src text phpmd",
        "phpstan": [
            "phpstan clear-result-cache",
            "phpstan analyse"
        ],
        "psalm": "psalm.phar",
        "rector": "rector",
        "stan": "@phpstan",
        "static": [
            "phpstan clear-result-cache",
            "grumphp run --testsuite=static"
        ],
        "tests": "grumphp run --testsuite=test",
        "unit": "phpunit --testsuite=unit --exclude-group=windows_only"
    },
    "scripts-descriptions": {
        "all": "Runs all automated tests and static analysis tools",
        "bench": "[phpbench] Run benchmarks",
        "c": "Clears all script caches and test fixtures in the \"var\" directory",
        "cbf": "[phpcbf] Automatically fixes standards violations where possible",
        "coverage": "Opens the code coverage report generated by the \"test\" script (on macOS)",
        "cs": "[phpcs] Checks code for standards compliance",
        "dox": "Runs tests with TestDox output",
        "fast": "Runs only fast automated tests",
        "fix": "[phpcbf] Automatically fixes standards violations where possible",
        "functional": "Runs functional tests",
        "lint": "Lints PHP files",
        "md": "[phpmd] Looks for potential problems within the source code",
        "phpbench": "[bench] Run benchmarks",
        "phpcbf": "[cbf] Automatically fixes standards violations where possible",
        "phpcs": "[cs] Checks code for standards compliance",
        "phpmd": "[md] Looks for potential problems within the source code",
        "phpstan": "[stan] Analyzes code to find bugs",
        "psalm": "Automatically fixes Psalm errors where possible",
        "rector": "Instantly upgrade and automatically refactors PHP code",
        "stan": "[phpstan] Analyzes code to find bugs",
        "static": "Runs all static analysis tools",
        "tests": "[test] Runs automated tests",
        "unit": "Runs unit tests"
    }
}
